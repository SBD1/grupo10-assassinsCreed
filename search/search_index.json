{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Grupo 10 - Assassin's Creed Reposit\u00f3rio para desenvolvimento do projeto de Assassin's Creed, do grupo 10, na disciplina Sistema de Banco de Dados 1 com o professor Maur\u00edcio Serrano da FGA - UnB. Colaboradores Ant\u00f4nio Neto Arthur Talles Eduardo Gurgel Vin\u00edcius Oliveira Wesley Santos","title":"In\u00edcio"},{"location":"#grupo-10-assassins-creed","text":"Reposit\u00f3rio para desenvolvimento do projeto de Assassin's Creed, do grupo 10, na disciplina Sistema de Banco de Dados 1 com o professor Maur\u00edcio Serrano da FGA - UnB.","title":"Grupo 10 - Assassin's Creed"},{"location":"#colaboradores","text":"Ant\u00f4nio Neto Arthur Talles Eduardo Gurgel Vin\u00edcius Oliveira Wesley Santos","title":"Colaboradores"},{"location":"Game/Game/","text":"Sobre O projeto tem como objetivo a implementa\u00e7\u00e3o do algoritmo Dijkstra. Criamos um mapa com possiveis caminhos que o personagem pode andar. Selecionado o destino o algoritmo ir\u00e1 tra\u00e7ar a menor rota entre a origem e destino, desviando de obst\u00e1culos. Mapa Algoritmo de Dijkstra para movimenta\u00e7\u00e3o na matriz Matriz de movimenta\u00e7\u00e3o Instala\u00e7\u00e3o Linguagem : Python Framework : pygame, pathfinding Pr\u00e9-requisitos: Git Python3 pygame Uso Clonar o reposit\u00f3rio https://github.com/projeto-de-algoritmos/grafos2_Game.git Mudar para a pasta do reposit\u00f3rio cd Grafos2_game/Grafos2 Executar o projeto python play.py","title":"Game"},{"location":"Game/Game/#sobre","text":"O projeto tem como objetivo a implementa\u00e7\u00e3o do algoritmo Dijkstra. Criamos um mapa com possiveis caminhos que o personagem pode andar. Selecionado o destino o algoritmo ir\u00e1 tra\u00e7ar a menor rota entre a origem e destino, desviando de obst\u00e1culos.","title":"Sobre"},{"location":"Game/Game/#mapa","text":"","title":"Mapa"},{"location":"Game/Game/#algoritmo-de-dijkstra-para-movimentacao-na-matriz","text":"","title":"Algoritmo de Dijkstra para movimenta\u00e7\u00e3o na matriz"},{"location":"Game/Game/#matriz-de-movimentacao","text":"","title":"Matriz de movimenta\u00e7\u00e3o"},{"location":"Game/Game/#instalacao","text":"Linguagem : Python Framework : pygame, pathfinding Pr\u00e9-requisitos: Git Python3 pygame","title":"Instala\u00e7\u00e3o"},{"location":"Game/Game/#uso","text":"Clonar o reposit\u00f3rio https://github.com/projeto-de-algoritmos/grafos2_Game.git Mudar para a pasta do reposit\u00f3rio cd Grafos2_game/Grafos2 Executar o projeto python play.py","title":"Uso"},{"location":"MER/MER/","text":"","title":"MER"},{"location":"Modelo%20Relacional/Modelo%20Relacional/","text":"","title":"Modelo Relacional"},{"location":"Normaliza%C3%A7%C3%A3o/Normaliza%C3%A7%C3%A3o/","text":"","title":"Normaliza\u00e7\u00e3o"},{"location":"SQL/DDL/DDL/","text":"CREATE DATABASE assassins_creed; CREATE DOMAIN ID AS INT NOT NULL CHECK(VALUE > 0); CREATE DOMAIN nome AS VARCHAR(30) NOT NULL; CREATE TABLE IF NOT EXISTS tbl_area ( nome nome NOT NULL, tamanho_x INTEGER, tamanho_y INTEGER, descricao VARCHAR(50), bioma VARCHAR(10), clima VARCHAR(10), CONSTRAINT nomeArea PRIMARY KEY(nome) ); CREATE TABLE IF NOT EXISTS tbl_quadrado ( Quadrado_id INTEGER unique, coordenada_x INTEGER NOT NULL, coordenada_y INTEGER NOT NULL, area VARCHAR(20) NOT NULL, terreno INTEGER, FOREIGN KEY (area) REFERENCES tbl_area (nome), CONSTRAINT coordenadaXY PRIMARY KEY(coordenada_x, coordenada_y) ); CREATE TABLE tbl_civil ( id ID NOT NULL, nomeCompleto nome NOT NULL, coordenada_x INTEGER NOT NULL, coordenada_y INTEGER NOT NULL, area VARCHAR(20), CONSTRAINT idDoCivil PRIMARY KEY(id), CONSTRAINT nomeCivil UNIQUE(nomeCompleto), FOREIGN KEY (area) REFERENCES tbl_area (nome), FOREIGN KEY (coordenada_x, coordenada_y) REFERENCES tbl_quadrado (coordenada_x, coordenada_y) ); CREATE TABLE tbl_inimigo ( id ID NOT NULL, nomeCompleto nome NOT NULL, tamanho INTEGER, raca VARCHAR(15), velocidade INTEGER, vida INTEGER, ataque INTEGER, coordenada_x INTEGER, coordenada_y INTEGER, area VARCHAR(20), CONSTRAINT idDoInimigo PRIMARY KEY(id), CONSTRAINT nomeInimigo UNIQUE(nomeCompleto), FOREIGN KEY (area) REFERENCES tbl_area (nome), FOREIGN KEY (coordenada_x, coordenada_y) REFERENCES tbl_quadrado (coordenada_x, coordenada_y) ); CREATE TABLE tbl_utilitario( idUtilitario ID NOT NULL, descricao VARCHAR(50), valor INTEGER, efeito VARCHAR(20), categoria VARCHAR(20), local CHAR(2), CONSTRAINT chavesPrimariasUtilitario PRIMARY KEY(idUtilitario) ); CREATE TABLE tbl_arma( idArma ID NOT NULL, descricao VARCHAR(50), valor INTEGER, dano VARCHAR(20), categoria VARCHAR(20), local CHAR(2), CONSTRAINT chavesPrimariasArma PRIMARY KEY(idArma) ); CREATE TABLE tbl_armadura( idArmadura ID NOT NULL, descricao VARCHAR(50), valor INTEGER, defesa VARCHAR(20), categoria VARCHAR(20), local CHAR(2), CONSTRAINT chavesPrimariasArmadura PRIMARY KEY(idArmadura) ); CREATE TABLE tbl_vantagens( id_vantagem ID NOT NULL, vantagem VARCHAR(20) NOT NULL, CONSTRAINT idVantagem PRIMARY KEY(id_vantagem), FOREIGN KEY (id_vantagem) REFERENCES tbl_Armadura (idArmadura) ); CREATE TABLE tbl_inventario( idInventario ID NOT NULL, tamanho INTEGER, CONSTRAINT idDoInventario PRIMARY KEY(idInventario) ); CREATE TABLE tbl_tipo_item( id_item ID NOT NULL, tipo_item VARCHAR(15), CONSTRAINT idItem PRIMARY KEY(id_item), FOREIGN KEY (id_item) REFERENCES tbl_Utilitario (idUtilitario), FOREIGN KEY (id_item) REFERENCES tbl_Arma (idArma), FOREIGN KEY (id_item) REFERENCES tbl_Armadura (idArmadura) ); CREATE TABLE tbl_instancia_item( id_instancia_item ID NOT NULL, id_item ID, CONSTRAINT idDaInstanciaItem PRIMARY KEY(id_instancia_item), FOREIGN KEY (id_item) REFERENCES tbl_tipo_item (id_item) ); CREATE TABLE tbl_item_localiza_quadrado( id_instancia ID NOT NULL, coordenada_x INTEGER, coordenada_y INTEGER, area VARCHAR(20), CONSTRAINT idDaInstancia PRIMARY KEY(id_instancia), FOREIGN KEY (id_instancia) REFERENCES tbl_instancia_item (id_instancia_item), FOREIGN KEY (area) REFERENCES tbl_area (nome), FOREIGN KEY (coordenada_x, coordenada_y) REFERENCES tbl_quadrado (coordenada_x, coordenada_y) ); CREATE TABLE tbl_mercado( id_mercado ID NOT NULL, coordenada_x INTEGER, coordenada_y INTEGER, area VARCHAR(20), CONSTRAINT idDoMercado PRIMARY KEY(id_mercado), FOREIGN KEY (area) REFERENCES tbl_area (nome), FOREIGN KEY (coordenada_x, coordenada_y) REFERENCES tbl_quadrado (coordenada_x, coordenada_y) ); CREATE TABLE tbl_mercado_possui_item( id_mercado ID NOT NULL, id_instancia ID NOT NULL, CONSTRAINT idDoMercadoPossuiItem PRIMARY KEY(id_mercado, id_instancia), FOREIGN KEY (id_mercado) REFERENCES tbl_mercado (id_mercado), FOREIGN KEY (id_instancia) REFERENCES tbl_instancia_item (id_instancia_item) ); CREATE TABLE tbl_inventario_armazena_item( idInventario ID NOT NULL, idInstancia ID NOT NULL, CONSTRAINT chavesPrimariaInvArmItem PRIMARY KEY(idInventario, idInstancia), FOREIGN KEY (idInstancia) REFERENCES tbl_instancia_item (id_instancia_item) ); CREATE TABLE tbl_heroi ( id_heroi ID NOT NULL, nomeCompleto nome NOT NULL, velocidade INTEGER, vida INTEGER, forca INTEGER, XP INTEGER, moedas INTEGER, idArmadura ID, idArma ID, idInventario ID, coordenada_x INTEGER, coordenada_y INTEGER, area VARCHAR(20), CONSTRAINT idDoHeroi PRIMARY KEY(id_heroi), CONSTRAINT nomeHeroi UNIQUE(nomeCompleto), FOREIGN KEY (area) REFERENCES tbl_area (nome), FOREIGN KEY (coordenada_x, coordenada_y) REFERENCES tbl_quadrado (coordenada_x, coordenada_y), FOREIGN KEY (idArmadura) REFERENCES tbl_Armadura (idArmadura), FOREIGN KEY (idArma) REFERENCES tbl_Arma(idArma), FOREIGN KEY (idInventario) REFERENCES tbl_Inventario(idInventario) ); CREATE TABLE tbl_aliado ( id ID NOT NULL, nomeCompleto nome NOT NULL, tamanho INTEGER, velocidade INTEGER, vida INTEGER, ataque INTEGER, coordenada_x INTEGER, coordenada_y INTEGER, area VARCHAR(20), idHeroi ID, CONSTRAINT idDoAliado PRIMARY KEY(id), CONSTRAINT nomeAliado UNIQUE(nomeCompleto), FOREIGN KEY (area) REFERENCES tbl_area (nome), FOREIGN KEY (coordenada_x, coordenada_y) REFERENCES tbl_quadrado (coordenada_x, coordenada_y), FOREIGN KEY (idHeroi) REFERENCES tbl_Heroi (id_heroi) ); CREATE TABLE tbl_tipo_personagem ( id_tipo_personagem ID NOT NULL, tipoPersonagem VARCHAR(20), CONSTRAINT idDoPersonagem PRIMARY KEY(id_tipo_personagem), FOREIGN KEY (id_tipo_personagem) REFERENCES tbl_civil (id), FOREIGN KEY (id_tipo_personagem) REFERENCES tbl_inimigo (id), FOREIGN KEY (id_tipo_personagem) REFERENCES tbl_aliado (id), FOREIGN KEY (id_tipo_personagem) REFERENCES tbl_heroi (id_heroi) ); CREATE TABLE tbl_instancia_civil ( idInstanciaCivil ID NOT NULL, idCivil ID, CONSTRAINT idDaInstanciaCivil PRIMARY KEY(idInstanciaCivil), FOREIGN KEY (idCivil) REFERENCES tbl_tipo_personagem (id_tipo_personagem) ); CREATE TABLE tbl_instancia_inimigo( idInstanciaInimigo ID NOT NULL, idInimigo ID, CONSTRAINT idDaInstanciaInimigo PRIMARY KEY(idInstanciaInimigo), FOREIGN KEY (idInimigo) REFERENCES tbl_tipo_personagem (id_tipo_personagem) ); CREATE TABLE tbl_instancia_aliado( idInstanciaAliado ID NOT NULL, idAliado ID, CONSTRAINT idDaInstanciaAliado PRIMARY KEY(idInstanciaAliado), FOREIGN KEY (idAliado) REFERENCES tbl_tipo_personagem (id_tipo_personagem) ); CREATE TABLE tbl_heroi_ajuda_aliado( idInstanciaAliado ID NOT NULL, idHeroi ID, CONSTRAINT idDeHeroiAjudaAliado PRIMARY KEY(idInstanciaAliado), FOREIGN KEY (idHeroi) REFERENCES tbl_Heroi (id_heroi) ); CREATE TABLE tbl_evolucao( categoria varchar(15) NOT NULL, idHeroi ID NOT NULL, XPMinimo INTEGER, ganho INTEGER, CONSTRAINT evolucao PRIMARY KEY(categoria, idHeroi), FOREIGN KEY (idHeroi) REFERENCES tbl_heroi (id_heroi) ); CREATE TABLE tbl_kill( idHeroi ID NOT NULL, idInstanciaInimigo ID Not NULL, vencedor nome, CONSTRAINT chavesPrimarias PRIMARY KEY(idHeroi, idInstanciaInimigo), FOREIGN KEY (idHeroi) REFERENCES tbl_heroi (id_heroi), FOREIGN KEY (idInstanciaInimigo) REFERENCES tbl_instancia_inimigo (idInstanciaInimigo) ); CREATE TABLE tbl_missao( nome nome NOT NULL, idHeroi ID NOT NULL, objetivo VARCHAR(200), dificuldade VARCHAR (10), CONSTRAINT chavesPrimariasMissao PRIMARY KEY(nome, idHeroi), FOREIGN KEY (idHeroi) REFERENCES tbl_Heroi (id_heroi) ); CREATE TABLE tbl_recompensas( missao nome NOT NULL, recompensa VARCHAR(20) NOT NULL, idHeroi ID NOT NULL, CONSTRAINT chavesPrimariasRecompensas PRIMARY KEY(missao, recompensa), FOREIGN KEY (idHeroi) REFERENCES tbl_Heroi (id_heroi), FOREIGN KEY (missao, idHeroi) REFERENCES tbl_missao (nome, idHeroi) ); CREATE TABLE tbl_inimigo_possui_utilitario( idUtilitario ID NOT NULL, idInstanciaInimigo ID NOT NULL, CONSTRAINT chavesPrimariasInimPossuiUtil PRIMARY KEY(idUtilitario, idInstanciaInimigo), FOREIGN KEY (idUtilitario) REFERENCES tbl_utilitario (idUtilitario), FOREIGN KEY (idInstanciaInimigo) REFERENCES tbl_instancia_inimigo (idInstanciaInimigo) );","title":"DDL"},{"location":"SQL/DML/DML/","text":"INSERT INTO tbl_area VALUES('Castelo', 5, 4, 'Uma \u00e1rea repleta de perigosos soldados da realeza', 'Taiga', 'Frio'); INSERT INTO tbl_quadrado (Quadrado_id,coordenada_x, coordenada_y, area, terreno) VALUES (1, 1, 1, 'Castelo', 1), (2, 1, 2, 'Castelo', 1), (3, 1, 3, 'Castelo', 1), (4, 1, 4, 'Castelo', 1), (5, 2, 1, 'Castelo', 2), (6, 2, 2, 'Castelo', 2), (7, 2, 3, 'Castelo', 2), (8, 2, 4, 'Castelo', 2), (9, 3, 1, 'Castelo', 1), (10, 3, 2, 'Castelo', 1), (11, 3, 3, 'Castelo', 1), (12, 3, 4, 'Castelo', 1), (13, 4, 1, 'Castelo', 3), (14, 4, 2, 'Castelo', 3), (15, 4, 3, 'Castelo', 3), (16, 4, 4, 'Castelo', 3), (17, 5, 1, 'Castelo', 1), (18, 5, 2, 'Castelo', 1), (19, 5, 3, 'Castelo', 1), (20, 5, 4, 'Castelo', 1); INSERT INTO tbl_civil (id, nomeCompleto, coordenada_x, coordenada_y, area) VALUES (1, 'Eduardo Gurgel', 1, 1, 'Castelo'), (2, 'Arthur Sousa', 1, 2, 'Castelo'); INSERT INTO tbl_inimigo (id, nomeCompleto, tamanho, raca, velocidade, vida, ataque, coordenada_x, coordenada_y, area) VALUES (1, 'Vinicius Silva', 3, 'Warrior', 2, 100, 15, 2, 1, 'Castelo'), (2, 'Wesley Santos', 2, 'Warrior', 3, 80, 12, 2, 2, 'Castelo'); INSERTO INTO tbl_aliado(id, nomeCompleto, tamanho, velocidade, vida, ataque, coordenada_x, coordenada_y, area) VALUES (1, 'Mauricio', 3, 3, 100, 15, 3, 1, 'Castelo'), (2, 'Maria', 1, 4, 90, 15, 3, 2, 'Castelo'); INSERT INTO tbl_heroi_ajuda_aliado VALUES(2, 3); INSERT INTO tbl_heroi VALUES(1, Alexios, 4, 150, 3, 0, 50, 9, 5, 1, 5, 5, 'Castelo'); INSERT INTO tbl_evolucao VALUES('Assassin', 1, 100, 60); INSERT INTO tbl_missao (nome, idHeroi, objetivo, dificuldade) VALUES ('O salvador', 1, 'Salve os aliados dos ladroes', 'facil'), ('A vingan\u00e7a', 1, 'Vingue a morte de seu aliado', 'medio'), ('A joia rara', 1, 'Roube a joia rara do castelo sem ser visto', 'dificil'); INSERT INTO tbl_recompensas (missao, recompensa) VALUES ('O salvador', '100 XP'), ('O salvador', 'Espada romana'), ('A vingan\u00e7a', '150 XP'), ('A joia rara', 'Joia dos Assassinos'), ('A joia rara', '300 XP'); INSERT INTO tbl_utilitario (idUtilitario, descricao, valor, efeito, categoria, local) VALUES (1, 'Remedio', 5, '+20 de vida', 'R', 'S'), (2, 'Flor do campo', 1, '+5 de vida', 'R', 'M'), (3, 'Bomba de fuma\u00e7a', 10, 'Lan\u00e7a uma cortina de fuma\u00e7a', 'S', 'E'), (4, 'Bomba de veneno', 10, '-10 de vida', 'P', 'E'); INSERT INTO tbl_arma (idArma, descricao, valor, dano, categoria, local) VALUES (5, 'Espada romana', 50, 25, 'S', 'E'), (6, 'Machado', 65, 40, 'A', 'M'), (7, 'Arco', 50, 15, 'B', 'E'), (8, 'Lan\u00e7a', 55, 40, 'L', 'M'); INSERT INTO tbl_armadura VALUES (9, 'Armadura de assassino', '80', '45', 'I'); INSERT INTO tbl_vantagens (Armadura, vantagem) VALUES (1, '+20% de defesa contra machados'), (1, 'Ganho de furtividade'); INSERT INTO tbl_tipo_item (idItem, tipoItem) VALUES (1, 'Utility'), (2, 'Utility'), (3, 'Utility'), (4, 'Utility'), (5, 'Weapon'), (6, 'Weapon'), (7, 'Weapon'), (8, 'Weapon'), (9, 'Armor'); INSERT INTO tbl_mercado VALUES(1, 4, 3, 'Castelo'); INSERT INTO tbl_inventario VALUES(1, 20); INSERT INTO tbl_instancia_Item (idInstanciaItem, idItem) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 3), (6, 4), (7, 5), (8, 5), (9, 6), (10, 6), (11, 7), (12, 7), (13, 8), (14, 8), (15, 9); INSERT INTO tbl_instancia_inimigo (idInstanciaInimigo, idInimigo) VALUES (1, 1), (2, 1), (3, 1), (4, 2), (5, 2), (6, 2); INSERT INTO tbl_instancia_aliado (idInstanciaAliado, idAliado) VALUES (1, 1), (2, 1), (3, 1), (4, 2), (5, 2), (6, 2); INSERT INTO tbl_instancia_civil (idInstanciaCivil, idCivil) VALUES (1, 1), (2, 1), (3, 1), (4, 2), (5, 2), (6, 2);","title":"DML"}]}